Welcome to RISCV-BOOM's documentation! (try to translate to Chinese)
======================================

Berkeley Out-of-Order Machine (BOOM) 是`RISC-V <riscv.org>`__的一个可综合，参数化的开源版本，由`Chisel <chisel-lang.org>`__硬件约束语言写成。
这个文档描述了核心的设计和实现，并提供使用该核心的其他帮助。

相关连接
------------

BOOM源代码:https://github.com/riscv-boom/riscv-boom.

The main supported mechanism to use the core is to use the Chipyard framework: https://github.com/ucb-bar/chipyard.

BOOM网站: https://boom-core.org.

BOOM邮件list: https://groups.google.com/forum/#!forum/riscv-boom.

快速开始
-----------

开始BOOM核最好的方式是用 `Chipyard project template <https://github.com/ucb-bar/chipyard>`__.
你可以在那里找到主要步骤:建立环境，build，C++模拟器run BOOM核
Chipyard也提供BOOM型SOC的推进流程，通过FireSim FPGA仿真器和HAMMER ASCI流程。
步骤在: `Chipyard's documentation <https://chipyard.readthedocs.io/en/latest/>`__:

.. _quick-start-code:
.. code-block:: bash
    :caption: Quick-Start Code

    # Download the template and setup environment
    git clone https://github.com/ucb-bar/chipyard.git
    cd chipyard
    ./scripts/init-submodules-no-riscv-tools.sh

    # build the toolchain
    ./scripts/build-toolchains.sh riscv-tools

    # add RISCV to env, update PATH and LD_LIBRARY_PATH env vars
    # note: env.sh generated by build-toolchains.sh
    source env.sh

    cd sims/verilator
    make CONFIG=LargeBoomConfig

.. Note:: :numref:`quick-start-code` assumes you don't have riscv-tools toolchain installed. It will pull and build the toolchain for you.

Table of Contents
-----------------

.. toctree::
   :maxdepth: 2
   :caption: Introduction:

   sections/intro-overview/boom
   sections/intro-overview/boom-pipeline
   sections/intro-overview/chisel
   sections/intro-overview/riscv-isa
   sections/intro-overview/rocket-chip

.. toctree::
   :maxdepth: 2
   :caption: Core Overview:

   sections/instruction-fetch-stage
   sections/branch-prediction/index
   sections/decode-stage
   sections/rename-stage
   sections/reorder-buffer
   sections/issue-units
   sections/reg-file-bypass-network
   sections/execution-stages
   sections/load-store-unit
   sections/memory-system

.. toctree::
   :maxdepth: 2
   :caption: Usage:

   sections/parameterization
   sections/boom-ecosystem
   sections/debugging
   sections/uarch-counters
   sections/verification
   sections/physical-realization

.. toctree::
   :maxdepth: 2
   :caption: Other:

   sections/future-work
   sections/faq
   sections/terminology

Indices and tables
==================

* :ref:`genindex`
* :ref:`modindex`
* :ref:`search`
